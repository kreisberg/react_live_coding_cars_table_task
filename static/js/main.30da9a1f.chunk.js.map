{"version":3,"sources":["api/colors.ts","api/cars.ts","App.tsx","index.tsx"],"names":["id","name","brand","rentPrice","colorId","getNewColoredCar","carsFromServer","map","car","color","colors","find","c","App","useState","cars","query","setQuery","visibleCars","filter","toLowerCase","includes","type","placeholder","value","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"4NAAe,GACb,CAAEA,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,QCHF,GACb,CACED,GAAI,EAAGE,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEJ,GAAI,EAAGE,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEJ,GAAI,EAAGE,MAAO,UAAWC,UAAW,IAAKC,QAAS,GAEpD,CACEJ,GAAI,EAAGE,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEJ,GAAI,EAAGE,MAAO,SAAUC,UAAW,GAAIC,QAAS,GAElD,CACEJ,GAAI,EAAGE,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEJ,GAAI,EAAGE,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEJ,GAAI,EAAGE,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEJ,GAAI,EAAGE,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEJ,GAAI,GAAIE,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAElD,CACEJ,GAAI,GAAIE,MAAO,aAAcC,UAAW,IAAKC,QAAS,I,OCnBpDC,EAAmB,kBACvBC,EAAeC,KAAI,SAAAC,GAAG,kCACjBA,GADiB,IAEpBC,OAPcL,EAOEI,EAAIJ,QANtBM,EAAOC,MAAK,SAAAC,GAAC,OAAIA,EAAEZ,KAAOI,QADX,IAACA,MAWLS,EAAgB,WAC3B,MAAeC,mBAAST,GAAjBU,EAAP,oBACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAEIC,EAAcH,EAQlB,OANIC,IACFE,EAAcH,EAAKI,QACjB,SAAAX,GAAG,OAAIA,EAAIN,MAAMkB,cAAcC,SAASL,EAAMI,mBAKhD,gCACE,uBACEE,KAAK,SACLC,YAAY,oBACZC,MAAOR,EACPS,SAAU,SAAAC,GAAK,OAAIT,EAASS,EAAMC,OAAOH,UAG3C,iCACE,qDAGF,gCACE,gCACGN,EAAYX,KAAI,SAAAC,GAAG,aAClB,+BACE,6BAAKA,EAAIR,KACT,6BAAKQ,EAAIN,QACT,uCAAKM,EAAIC,aAAT,aAAK,EAAWR,OAChB,6BAAKO,EAAIL,0B,MC/CvByB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.30da9a1f.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'white' },\n  { id: 2, name: 'black' },\n  { id: 3, name: 'red' },\n];\n","export default [\n  {\n    id: 1, brand: 'Audi', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 2, brand: 'Audi', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 3, brand: 'Ferarri', rentPrice: 500, colorId: 3,\n  },\n  {\n    id: 4, brand: 'Ford', rentPrice: 80, colorId: 1,\n  },\n  {\n    id: 5, brand: 'Peugot', rentPrice: 50, colorId: 1,\n  },\n  {\n    id: 6, brand: 'Ford', rentPrice: 150, colorId: 1,\n  },\n  {\n    id: 7, brand: 'Ford', rentPrice: 140, colorId: 2,\n  },\n  {\n    id: 8, brand: 'Lada', rentPrice: 20, colorId: 3,\n  },\n  {\n    id: 9, brand: 'Opel', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 10, brand: 'Opel', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 11, brand: 'Mitsubishi', rentPrice: 300, colorId: 1,\n  },\n];\n","import React, { useState } from 'react';\nimport colors from './api/colors';\nimport carsFromServer from './api/cars';\nimport { FullCarsList } from './types';\n\n// 1. Render car with color\n// 2. Add ability to filter car by brand name\n// 3. Add ability to filter car by color\n\nconst finColor = (colorId: number) => (\n  colors.find(c => c.id === colorId)\n);\n\nconst getNewColoredCar = (): FullCarsList[] => (\n  carsFromServer.map(car => ({\n    ...car,\n    color: finColor(car.colorId),\n  }))\n);\n\nexport const App: React.FC = () => {\n  const [cars] = useState(getNewColoredCar);\n  const [query, setQuery] = useState('');\n\n  let visibleCars = cars;\n\n  if (query) {\n    visibleCars = cars.filter(\n      car => car.brand.toLowerCase().includes(query.toLowerCase()),\n    );\n  }\n\n  return (\n    <div>\n      <input\n        type=\"search\"\n        placeholder=\"Find by car brand\"\n        value={query}\n        onChange={event => setQuery(event.target.value)}\n      />\n\n      <select>\n        <option>Chose a color</option>\n      </select>\n\n      <table>\n        <thead>\n          {visibleCars.map(car => (\n            <tr>\n              <th>{car.id}</th>\n              <th>{car.brand}</th>\n              <th>{car.color?.name}</th>\n              <th>{car.rentPrice}</th>\n            </tr>\n          ))}\n        </thead>\n      </table>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}