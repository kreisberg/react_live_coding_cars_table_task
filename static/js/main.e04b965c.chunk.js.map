{"version":3,"sources":["api/colors.ts","api/cars.ts","App.tsx","index.tsx"],"names":["id","name","brand","rentPrice","colorId","getNewColoredCar","carsFromServer","map","car","color","colors","find","c","App","useState","cars","query","setQuery","chosenColor","setChosenColor","chosenPrice","setChosenPrice","visibleCars","filter","toLowerCase","includes","type","placeholder","value","onChange","event","target","style","ReactDOM","render","document","getElementById"],"mappings":"4NAAe,GACb,CAAEA,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,QCHF,GACb,CACED,GAAI,EAAGE,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEJ,GAAI,EAAGE,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEJ,GAAI,EAAGE,MAAO,UAAWC,UAAW,IAAKC,QAAS,GAEpD,CACEJ,GAAI,EAAGE,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEJ,GAAI,EAAGE,MAAO,SAAUC,UAAW,GAAIC,QAAS,GAElD,CACEJ,GAAI,EAAGE,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEJ,GAAI,EAAGE,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEJ,GAAI,EAAGE,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEJ,GAAI,EAAGE,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEJ,GAAI,GAAIE,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAElD,CACEJ,GAAI,GAAIE,MAAO,aAAcC,UAAW,IAAKC,QAAS,I,OCnBpDC,EAAmB,kBACvBC,EAAeC,KAAI,SAAAC,GAAG,kCACjBA,GADiB,IAEpBC,OAPcL,EAOEI,EAAIJ,QANtBM,EAAOC,MAAK,SAAAC,GAAC,OAAIA,EAAEZ,KAAOI,QADX,IAACA,MAWLS,EAAgB,WAC3B,MAAeC,mBAAST,GAAjBU,EAAP,oBACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAsCH,mBAAS,IAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAsCL,mBAAS,IAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KAEIC,EAAcP,EAgBlB,OAdIC,IACFM,EAAcP,EAAKQ,QACjB,SAAAf,GAAG,OAAIA,EAAIN,MAAMsB,cAAcC,SAAST,EAAMQ,mBAI9CN,IACFI,EAAcA,EAAYC,QAAO,SAAAX,GAAC,aAAI,UAAAA,EAAEH,aAAF,eAASR,QAASiB,MAGtDE,IACFE,EAAcA,EAAYC,QAAO,SAAAX,GAAC,OAAIA,EAAET,YAAciB,MAItD,gCACE,uBACEM,KAAK,SACLC,YAAY,oBACZC,MAAOZ,EACPa,SAAU,SAAAC,GAAK,OAAIb,EAASa,EAAMC,OAAOH,UAG3C,yBACEC,SAAU,SAAAC,GAAK,OAAIX,EAAeW,EAAMC,OAAOH,QAC/CA,MAAOV,EAFT,UAIE,wBAAQU,MAAM,GAAd,2BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,MAAd,oBAGF,yBACEA,MAAOR,EACPS,SAAU,SAAAC,GAAK,OAAIT,EAAeS,EAAMC,OAAOH,QAFjD,UAIE,wBAAQA,MAAM,GAAd,4BACA,wBAAQA,MAAM,MAAd,2BACA,wBAAQA,MAAM,MAAd,2BACA,wBAAQA,MAAM,MAAd,8BAGF,gCACE,gCACGN,EAAYf,KAAI,SAAAC,GAAG,eAClB,+BACE,6BAAKA,EAAIR,KACT,6BAAKQ,EAAIN,QACT,oBAAI8B,MAAO,CAAEvB,MAAK,UAAED,EAAIC,aAAN,aAAE,EAAWR,MAA/B,mBAAwCO,EAAIC,aAA5C,aAAwC,EAAWR,OACnD,6BAAKO,EAAIL,0B,MCzEvB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e04b965c.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'white' },\n  { id: 2, name: 'black' },\n  { id: 3, name: 'red' },\n];\n","export default [\n  {\n    id: 1, brand: 'Audi', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 2, brand: 'Audi', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 3, brand: 'Ferarri', rentPrice: 500, colorId: 3,\n  },\n  {\n    id: 4, brand: 'Ford', rentPrice: 80, colorId: 1,\n  },\n  {\n    id: 5, brand: 'Peugot', rentPrice: 50, colorId: 1,\n  },\n  {\n    id: 6, brand: 'Ford', rentPrice: 150, colorId: 1,\n  },\n  {\n    id: 7, brand: 'Ford', rentPrice: 140, colorId: 2,\n  },\n  {\n    id: 8, brand: 'Lada', rentPrice: 20, colorId: 3,\n  },\n  {\n    id: 9, brand: 'Opel', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 10, brand: 'Opel', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 11, brand: 'Mitsubishi', rentPrice: 300, colorId: 1,\n  },\n];\n","import React, { useState } from 'react';\nimport colors from './api/colors';\nimport carsFromServer from './api/cars';\nimport { FullCarsList } from './types';\n\n// 1. Render car with color\n// 2. Add ability to filter car by brand name\n// 3. Add ability to filter car by color\n\nconst finColor = (colorId: number) => (\n  colors.find(c => c.id === colorId)\n);\n\nconst getNewColoredCar = (): FullCarsList[] => (\n  carsFromServer.map(car => ({\n    ...car,\n    color: finColor(car.colorId),\n  }))\n);\n\nexport const App: React.FC = () => {\n  const [cars] = useState(getNewColoredCar);\n  const [query, setQuery] = useState('');\n  const [chosenColor, setChosenColor] = useState('');\n  const [chosenPrice, setChosenPrice] = useState('');\n\n  let visibleCars = cars;\n\n  if (query) {\n    visibleCars = cars.filter(\n      car => car.brand.toLowerCase().includes(query.toLowerCase()),\n    );\n  }\n\n  if (chosenColor) {\n    visibleCars = visibleCars.filter(c => c.color?.name === chosenColor);\n  }\n\n  if (chosenPrice) {\n    visibleCars = visibleCars.filter(c => c.rentPrice <= +chosenPrice);\n  }\n\n  return (\n    <div>\n      <input\n        type=\"search\"\n        placeholder=\"Find by car brand\"\n        value={query}\n        onChange={event => setQuery(event.target.value)}\n      />\n\n      <select\n        onChange={event => setChosenColor(event.target.value)}\n        value={chosenColor}\n      >\n        <option value=\"\">Chose a color</option>\n        <option value=\"white\">white</option>\n        <option value=\"black\">black</option>\n        <option value=\"red\">red</option>\n      </select>\n\n      <select\n        value={chosenPrice}\n        onChange={event => setChosenPrice(event.target.value)}\n      >\n        <option value=\"\">Chose by price</option>\n        <option value=\"100\">less then 100</option>\n        <option value=\"200\">less then 200</option>\n        <option value=\"500\">less then 500</option>\n      </select>\n\n      <table>\n        <thead>\n          {visibleCars.map(car => (\n            <tr>\n              <th>{car.id}</th>\n              <th>{car.brand}</th>\n              <th style={{ color: car.color?.name }}>{car.color?.name}</th>\n              <th>{car.rentPrice}</th>\n            </tr>\n          ))}\n        </thead>\n      </table>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}